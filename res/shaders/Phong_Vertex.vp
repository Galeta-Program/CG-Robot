#version 460

layout(location = 0) in vec3 in_Position;
layout(location = 1) in vec2 in_TexCoord;
layout(location = 2) in vec3 in_Normal;

uniform u_MatVP{
	mat4 u_View;
	mat4 u_Projection;
};

uniform mat4 u_Model;
uniform vec3 u_LightPosition;
uniform mat3 u_NormalMatrix;

out vec3 v_Normal;
out vec3 v_LightDir;
out vec3 v_ViewDir;
out vec2 v_TexCoord;


void main(void) 
{ 
    vec4 pos4 = u_View * u_Model * vec4(in_Position, 1.0);
    vec3 pos3 = pos4.xyz / pos4.w;
    
    v_Normal = normalize(u_NormalMatrix * in_Normal);

    vec4 lightPos4 = u_View * vec4(u_LightPosition, 1.0);
    vec3 lightPos = lightPos4.xyz / lightPos4.w;
    v_LightDir = normalize(lightPos - pos3);

    v_ViewDir = normalize(-pos3);

    v_TexCoord = in_TexCoord;
    gl_Position = u_Projection * pos4;
}